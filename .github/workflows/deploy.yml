name: Docker + Ngrok Demo

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1Ô∏è‚É£ Checkout del codi
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2Ô∏è‚É£ Arrancar els contenidors Docker (frontend + backend)
      - name: Run Docker containers
        run: docker compose up -d --build

      # 3Ô∏è‚É£ Instal¬∑lar Ngrok v3 al runner
      - name: Install Ngrok v3
        run: |
          curl -sLo ngrok.zip https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-linux-amd64.zip
          unzip -o ngrok.zip
          sudo mv ngrok /usr/local/bin/
          sudo chmod +x /usr/local/bin/
          /usr/local/bin/ngrok version

      # 4Ô∏è‚É£ Autenticar Ngrok amb el secret
      - name: Authenticate Ngrok
        run: /usr/local/bin/ngrok config add-authtoken ${{ secrets.NGROK_AUTHTOKEN }}

      # 5Ô∏è‚É£ Llan√ßar el t√∫nel Ngrok i mostrar la URL p√∫blica
      - name: Start Ngrok tunnel
        id: ngrok
        run: |
          # Llan√ßa ngrok en background al port del frontend
          /usr/local/bin/ngrok http 3000 --log=stdout > ngrok.log &
          NGROK_PID=$!

          # Espera que Ngrok arranqui
          sleep 5

          # Extreu la URL p√∫blica des del endpoint local
          NGROK_URL=$(curl --silent http://127.0.0.1:4040/api/tunnels | \
                       grep -oP '"public_url":"\Khttps://[^"]+')
          echo "NGROK_URL=$NGROK_URL" >> $GITHUB_ENV
          echo "üåê Web accessible a: $NGROK_URL"
          echo "::notice title=URL p√∫blica::$NGROK_URL"

          # Mant√© el t√∫nel actiu durant 10 minuts
          sleep 600
          kill $NGROK_PID

      # 6Ô∏è‚É£ Neteja dels contenidors Docker al final
      - name: Stop Docker containers
        if: always()
        run: docker compose down
